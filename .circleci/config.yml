version: 2
jobs:
  build:
    filters:
      tags:
        only: /.*/
    working_directory: /app
    docker:
      - image: docker:18.06.3-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=18.1-r0
            pip install \
              docker-compose==1.23.1
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/pilosus/pili.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/pilosus/pili.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=pilosus/pili -t pilosus/pili .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches/pilosus
            docker save -o /caches/pilosus/pili.tar pilosus/pili
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/pilosus/pili.tar
      - run:
          name: Run tests
          command: |
            docker-compose -f ./docker-compose.ci.yml up
      - run:
          name: Run linters
          command: |
            docker-compose -f ./docker-compose.ci.yml run app make lint
      - run:
          name: Run mypy
          command: |
            docker-compose -f ./docker-compose.ci.yml run app make mypy
      - deploy:
          name: Push application Docker image
          context: registry.pilosus
          command: |
            if [ ! -z "${CIRCLE_TAG}" ]; then
              IMAGE_TAG=${CIRCLE_TAG}
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              IMAGE_TAG=latest
            else
              IMAGE_TAG=${CIRCLE_SHA1}
            fi
            docker login -u $REGISTRY_LOGIN -p $REGISTRY_PASSWORD $REGISTRY_URL || true
            docker tag pilosus/pili "${REGISTRY_URL}/pilosus/pili:${IMAGE_TAG}"
            docker push "${REGISTRY_URL}/pilosus/pili:${IMAGE_TAG}"
            docker logout $REGISTRY_URL
