# -*- mode: conf-unix -*-

##############################################
## Nginx Configuration Example for Pili App ##
##############################################

##
## Objectives
##
## 1. Redirect all traffic to https
## 2. Use letsencrypt
## 3. Serve static files through Nginx, not uWSGI
## 4. Serve all other requests through uWSGI application server

##
## See also
##
## Traffic redirection
## https://serverfault.com/questions/67316/in-nginx-how-can-i-rewrite-all-http-requests-to-https-while-maintaining-sub-dom
##
## Nginx Optimization
## https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
##


## Redirect non-encrypted traffic to the port 443 
server {
       listen         80;
       server_name    dev.pilosus.org;
       return         301 https://$server_name$request_uri;
}

## Encrypted traffic
server {
       ## https
       listen 443 ssl;
       server_name dev.pilosus.org;

       ## Path to letsencrypt keys
       ssl_certificate /etc/letsencrypt/live/pili/fullchain.pem;
       ssl_certificate_key /etc/letsencrypt/live/pili/privkey.pem;

       ## Set protocols for https
       ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
       ssl_prefer_server_ciphers on;
       ssl_dhparam /etc/ssl/certs/dhparam.pem;
       ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
       ssl_session_timeout 1d;
       ssl_session_cache shared:SSL:50m;
       ssl_stapling on;
       ssl_stapling_verify on;
       add_header Strict-Transport-Security max-age=15768000;

       ## letsencrypt path
       location ^~ /.well-known {
              root /var/www/pili;
	      satisfy all;
	      allow all;
       }

       ## Settings to by-pass for static files 
       location ^~ /static/(.*)  {
	      # root /full/path/to/application/static/file/dir;
	      alias /var/www/pili/app/static/$1;
	      # set expire headers for rearly changed/regularly served files
	      expires 365d;
	}

       ## Proxying connections to application servers
       location / {
		include            uwsgi_params;
		uwsgi_pass         unix:/var/run/pili/pili-nginx.sock;
		#uwsgi_pass         127.0.0.1:3032;

		## Additional uwsgi parameters
		#uwsgi_param 	   SCRIPT_NAME /;
		#uwsgi_modifier1	   30;

		# uWSGI with harakiri option requires buffering on
		# see also
		# http://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_request_buffering
		# https://forum.nginx.org/read.php?2,193347,193347#msg-193347
		# https://uwsgi-docs.readthedocs.org/en/latest/Fastrouter.html?highlight=buffering#post-buffering-mode-uwsgi-2-0-9
		uwsgi_request_buffering on;

		## Set proxy headers
		proxy_redirect     off;
		proxy_set_header   Host $host;
		proxy_set_header   X-Real-IP $remote_addr;
		proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header   X-Forwarded-Host $server_name;
	}
}
